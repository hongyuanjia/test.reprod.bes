on:
  push:
    branches:
      - main
      - master

name: build

jobs:
  build:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RMD_PATH: analysis/paper/paper.Rmd
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Setup TinyTeX
        uses: r-lib/actions/setup-tinytex@v1

      - name: Cache Renv packages
        uses: actions/cache@v2
        with:
          path: $HOME/.local/share/renv
          key: r-${{ hashFiles('renv.lock') }}
          restore-keys: r-

      - name: Install packages
        run: |
          R -e 'install.packages("renv")'
          R -e 'renv::restore()'

      - name: Render Rmarkdown file
        id: render
        run: |
          Rscript -e "f <- commandArgs(TRUE); f <- rmarkdown::render(f, 'all', 'index'); write(gsub(paste0(getwd(), '/'), '', f, fixed = TRUE), 'results.txt')" ${RMD_PATH}
          echo '::set-output name=BuildDir::$(Rscript -e "cat(dirname(commandArgs(TRUE)))" ${RMD_PATH})'
          echo '::set-output name=HtmlPath::$(cat results.txt | grep .html)'
          echo '::set-output name=PdfPath::$(cat results.txt  | grep .pdf)'

      - name: Upload rendered PDF
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: PDF
          path: ${{steps.render.outputs.PdfPath}}

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: ${{steps.render.outputs.BuildDir}}
          jekyll: false
          keep_history: true
